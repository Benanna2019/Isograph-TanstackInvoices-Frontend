/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SalesRouteRouteImport } from './routes/sales/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PokemonsIndexRouteImport } from './routes/pokemons/index'
import { Route as SalesSubscriptionsRouteImport } from './routes/sales/subscriptions'
import { Route as PokemonsPokemonIdRouteImport } from './routes/pokemons/$pokemonId'
import { Route as SalesInvoicesRouteRouteImport } from './routes/sales/invoices/route'
import { Route as SalesDepositsIndexRouteImport } from './routes/sales/deposits/index'
import { Route as SalesCustomersIndexRouteImport } from './routes/sales/customers/index'
import { Route as SalesInvoicesNewRouteImport } from './routes/sales/invoices/new'
import { Route as SalesInvoicesInvoiceIdRouteImport } from './routes/sales/invoices/$invoiceId'
import { Route as SalesCustomersCustomerIdRouteImport } from './routes/sales/customers/$customerId'

const SalesRouteRoute = SalesRouteRouteImport.update({
  id: '/sales',
  path: '/sales',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PokemonsIndexRoute = PokemonsIndexRouteImport.update({
  id: '/pokemons/',
  path: '/pokemons/',
  getParentRoute: () => rootRouteImport,
} as any)
const SalesSubscriptionsRoute = SalesSubscriptionsRouteImport.update({
  id: '/subscriptions',
  path: '/subscriptions',
  getParentRoute: () => SalesRouteRoute,
} as any)
const PokemonsPokemonIdRoute = PokemonsPokemonIdRouteImport.update({
  id: '/pokemons/$pokemonId',
  path: '/pokemons/$pokemonId',
  getParentRoute: () => rootRouteImport,
} as any)
const SalesInvoicesRouteRoute = SalesInvoicesRouteRouteImport.update({
  id: '/invoices',
  path: '/invoices',
  getParentRoute: () => SalesRouteRoute,
} as any)
const SalesDepositsIndexRoute = SalesDepositsIndexRouteImport.update({
  id: '/deposits/',
  path: '/deposits/',
  getParentRoute: () => SalesRouteRoute,
} as any)
const SalesCustomersIndexRoute = SalesCustomersIndexRouteImport.update({
  id: '/customers/',
  path: '/customers/',
  getParentRoute: () => SalesRouteRoute,
} as any)
const SalesInvoicesNewRoute = SalesInvoicesNewRouteImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => SalesInvoicesRouteRoute,
} as any)
const SalesInvoicesInvoiceIdRoute = SalesInvoicesInvoiceIdRouteImport.update({
  id: '/$invoiceId',
  path: '/$invoiceId',
  getParentRoute: () => SalesInvoicesRouteRoute,
} as any)
const SalesCustomersCustomerIdRoute =
  SalesCustomersCustomerIdRouteImport.update({
    id: '/customers/$customerId',
    path: '/customers/$customerId',
    getParentRoute: () => SalesRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/sales': typeof SalesRouteRouteWithChildren
  '/sales/invoices': typeof SalesInvoicesRouteRouteWithChildren
  '/pokemons/$pokemonId': typeof PokemonsPokemonIdRoute
  '/sales/subscriptions': typeof SalesSubscriptionsRoute
  '/pokemons': typeof PokemonsIndexRoute
  '/sales/customers/$customerId': typeof SalesCustomersCustomerIdRoute
  '/sales/invoices/$invoiceId': typeof SalesInvoicesInvoiceIdRoute
  '/sales/invoices/new': typeof SalesInvoicesNewRoute
  '/sales/customers': typeof SalesCustomersIndexRoute
  '/sales/deposits': typeof SalesDepositsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/sales': typeof SalesRouteRouteWithChildren
  '/sales/invoices': typeof SalesInvoicesRouteRouteWithChildren
  '/pokemons/$pokemonId': typeof PokemonsPokemonIdRoute
  '/sales/subscriptions': typeof SalesSubscriptionsRoute
  '/pokemons': typeof PokemonsIndexRoute
  '/sales/customers/$customerId': typeof SalesCustomersCustomerIdRoute
  '/sales/invoices/$invoiceId': typeof SalesInvoicesInvoiceIdRoute
  '/sales/invoices/new': typeof SalesInvoicesNewRoute
  '/sales/customers': typeof SalesCustomersIndexRoute
  '/sales/deposits': typeof SalesDepositsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/sales': typeof SalesRouteRouteWithChildren
  '/sales/invoices': typeof SalesInvoicesRouteRouteWithChildren
  '/pokemons/$pokemonId': typeof PokemonsPokemonIdRoute
  '/sales/subscriptions': typeof SalesSubscriptionsRoute
  '/pokemons/': typeof PokemonsIndexRoute
  '/sales/customers/$customerId': typeof SalesCustomersCustomerIdRoute
  '/sales/invoices/$invoiceId': typeof SalesInvoicesInvoiceIdRoute
  '/sales/invoices/new': typeof SalesInvoicesNewRoute
  '/sales/customers/': typeof SalesCustomersIndexRoute
  '/sales/deposits/': typeof SalesDepositsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/sales'
    | '/sales/invoices'
    | '/pokemons/$pokemonId'
    | '/sales/subscriptions'
    | '/pokemons'
    | '/sales/customers/$customerId'
    | '/sales/invoices/$invoiceId'
    | '/sales/invoices/new'
    | '/sales/customers'
    | '/sales/deposits'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/sales'
    | '/sales/invoices'
    | '/pokemons/$pokemonId'
    | '/sales/subscriptions'
    | '/pokemons'
    | '/sales/customers/$customerId'
    | '/sales/invoices/$invoiceId'
    | '/sales/invoices/new'
    | '/sales/customers'
    | '/sales/deposits'
  id:
    | '__root__'
    | '/'
    | '/sales'
    | '/sales/invoices'
    | '/pokemons/$pokemonId'
    | '/sales/subscriptions'
    | '/pokemons/'
    | '/sales/customers/$customerId'
    | '/sales/invoices/$invoiceId'
    | '/sales/invoices/new'
    | '/sales/customers/'
    | '/sales/deposits/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SalesRouteRoute: typeof SalesRouteRouteWithChildren
  PokemonsPokemonIdRoute: typeof PokemonsPokemonIdRoute
  PokemonsIndexRoute: typeof PokemonsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/sales': {
      id: '/sales'
      path: '/sales'
      fullPath: '/sales'
      preLoaderRoute: typeof SalesRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pokemons/': {
      id: '/pokemons/'
      path: '/pokemons'
      fullPath: '/pokemons'
      preLoaderRoute: typeof PokemonsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sales/subscriptions': {
      id: '/sales/subscriptions'
      path: '/subscriptions'
      fullPath: '/sales/subscriptions'
      preLoaderRoute: typeof SalesSubscriptionsRouteImport
      parentRoute: typeof SalesRouteRoute
    }
    '/pokemons/$pokemonId': {
      id: '/pokemons/$pokemonId'
      path: '/pokemons/$pokemonId'
      fullPath: '/pokemons/$pokemonId'
      preLoaderRoute: typeof PokemonsPokemonIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sales/invoices': {
      id: '/sales/invoices'
      path: '/invoices'
      fullPath: '/sales/invoices'
      preLoaderRoute: typeof SalesInvoicesRouteRouteImport
      parentRoute: typeof SalesRouteRoute
    }
    '/sales/deposits/': {
      id: '/sales/deposits/'
      path: '/deposits'
      fullPath: '/sales/deposits'
      preLoaderRoute: typeof SalesDepositsIndexRouteImport
      parentRoute: typeof SalesRouteRoute
    }
    '/sales/customers/': {
      id: '/sales/customers/'
      path: '/customers'
      fullPath: '/sales/customers'
      preLoaderRoute: typeof SalesCustomersIndexRouteImport
      parentRoute: typeof SalesRouteRoute
    }
    '/sales/invoices/new': {
      id: '/sales/invoices/new'
      path: '/new'
      fullPath: '/sales/invoices/new'
      preLoaderRoute: typeof SalesInvoicesNewRouteImport
      parentRoute: typeof SalesInvoicesRouteRoute
    }
    '/sales/invoices/$invoiceId': {
      id: '/sales/invoices/$invoiceId'
      path: '/$invoiceId'
      fullPath: '/sales/invoices/$invoiceId'
      preLoaderRoute: typeof SalesInvoicesInvoiceIdRouteImport
      parentRoute: typeof SalesInvoicesRouteRoute
    }
    '/sales/customers/$customerId': {
      id: '/sales/customers/$customerId'
      path: '/customers/$customerId'
      fullPath: '/sales/customers/$customerId'
      preLoaderRoute: typeof SalesCustomersCustomerIdRouteImport
      parentRoute: typeof SalesRouteRoute
    }
  }
}

interface SalesInvoicesRouteRouteChildren {
  SalesInvoicesInvoiceIdRoute: typeof SalesInvoicesInvoiceIdRoute
  SalesInvoicesNewRoute: typeof SalesInvoicesNewRoute
}

const SalesInvoicesRouteRouteChildren: SalesInvoicesRouteRouteChildren = {
  SalesInvoicesInvoiceIdRoute: SalesInvoicesInvoiceIdRoute,
  SalesInvoicesNewRoute: SalesInvoicesNewRoute,
}

const SalesInvoicesRouteRouteWithChildren =
  SalesInvoicesRouteRoute._addFileChildren(SalesInvoicesRouteRouteChildren)

interface SalesRouteRouteChildren {
  SalesInvoicesRouteRoute: typeof SalesInvoicesRouteRouteWithChildren
  SalesSubscriptionsRoute: typeof SalesSubscriptionsRoute
  SalesCustomersCustomerIdRoute: typeof SalesCustomersCustomerIdRoute
  SalesCustomersIndexRoute: typeof SalesCustomersIndexRoute
  SalesDepositsIndexRoute: typeof SalesDepositsIndexRoute
}

const SalesRouteRouteChildren: SalesRouteRouteChildren = {
  SalesInvoicesRouteRoute: SalesInvoicesRouteRouteWithChildren,
  SalesSubscriptionsRoute: SalesSubscriptionsRoute,
  SalesCustomersCustomerIdRoute: SalesCustomersCustomerIdRoute,
  SalesCustomersIndexRoute: SalesCustomersIndexRoute,
  SalesDepositsIndexRoute: SalesDepositsIndexRoute,
}

const SalesRouteRouteWithChildren = SalesRouteRoute._addFileChildren(
  SalesRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SalesRouteRoute: SalesRouteRouteWithChildren,
  PokemonsPokemonIdRoute: PokemonsPokemonIdRoute,
  PokemonsIndexRoute: PokemonsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
